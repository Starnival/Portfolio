---
// Layout por defecto de Astro el cual se encarga de Renderizar el head y el body

import Head from "@/components/BaseHead.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "@/consts";
---

<!doctype html>
<html lang="en">
    <Head title={SITE_TITLE} description={SITE_DESCRIPTION} />

    <body>
        <slot />
    </body>
</html>

<style is:global>
    :root {
        --bg: #FFFFFF;
        --title: #030712;
        --text: #4d535f;
        --accent: #111827;
        --other: #46ca74;

        --bg-soft: #f9fafb;
    }


    * {
        min-width: 0;
        font: inherit;
    }

    *,
    *::before,
    *::after {
        box-sizing: border-box;
    }

    img,
    video,
    svg {
        display: block;
        height: auto;
        max-width: 100%;
    }

    body {
        margin: 0;
        width: 800px;
        min-height: calc(100dvh - 2rem);
        margin: 1rem auto;
        
        background-color: var(--bg);
    }

    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
        text-wrap: balance;
        margin: 0;
        color: var(--title);
    }

    p {
        text-wrap: pretty;
        margin: 0;
    }

    h1 {
		font-weight: 1000;
		font-size: 2rem;
        letter-spacing: 0.2rem;
	}


	h2 {
        font-weight: 900;
		font-size: 1.75rem;
	}

	h3 {
        font-weight: 700;
		font-size: 1.4rem;
	}

	h4 {
        font-weight: bold;
		font-size: 1.2rem;
	}

    h5 {
        font-weight: bold;
        font-size: 1rem;
    }

	p {
		font-size: 1rem;
		color: var(--text);
	}

    small {
        font-size: 0.8rem;
        color: var(--title);
        font-style: italic;
        opacity: 0.8;
    }

    ul {
        list-style: none;
        padding: 0;
        margin: 0;
    }

    li {
        margin: 0;
    }

    a {
        color: inherit;
        text-decoration: none;
    }
</style>

<script>
    const THEME_KEY = "theme";
    const DARK_THEME_CLASS = "dark-theme";
    const darkThemeMediaQuery = window.matchMedia(
        "(prefers-color-scheme: dark)",
    );

    // Aplica el tema claro u oscuro al documento
    const applyTheme = (theme: string) => {
        document.body.classList.toggle(DARK_THEME_CLASS, theme === "dark");
        localStorage.setItem(THEME_KEY, theme);
    };

    // Alternar entre el tema claro y oscuro
    const toggleTheme = () => {
        const currentTheme =
            localStorage.getItem(THEME_KEY) ||
            (darkThemeMediaQuery.matches ? "dark" : "light");
        const newTheme = currentTheme === "dark" ? "light" : "dark";
        applyTheme(newTheme);
    };

    // Event listener para el cambio de tema
    const onThemeChange = (event: { matches: any }) => {
        const theme = event.matches ? "dark" : "light";
        applyTheme(theme);
    };

    // Configura el controlador de eventos para el botón de alternancia de tema
    document.addEventListener("DOMContentLoaded", () => {
        const themeToggle = document.querySelector(".theme-toggle");
        themeToggle?.addEventListener("click", toggleTheme);

        const darkThemeMediaQuery = window.matchMedia(
            "(prefers-color-scheme: dark)",
        );
        darkThemeMediaQuery.addEventListener("change", onThemeChange);

        // Aplica el tema actual al cargar la página basado en la configuración almacenada o la preferencia del sistema
        const currentTheme =
            localStorage.getItem(THEME_KEY) ||
            (darkThemeMediaQuery.matches ? "dark" : "light");
        applyTheme(currentTheme);
    });
</script>
